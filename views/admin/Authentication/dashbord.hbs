<link rel="stylesheet"
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="/stylesheets/dashboard.css">
<body>
    <div class="container mt-4">
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-4">
            <div class="col">
                <!-- Cards for displaying metrics -->
                <div
                    class="card radius-10 border-start border-0 border-3 border-info">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <p class="mb-0 text-secondary">Total Orders</p>
                                <h4 class="my-1 text-info"
                                    id="totalOrders">{{totalOrders}}</h4>
                                <p class="mb-0 font-13">{{totalOrdersChange}}
                                    from last day</p>
                            </div>
                            <div
                                class="widgets-icons-2 rounded-circle bg-gradient-scooter text-white ms-auto">
                                <i class="fa fa-shopping-cart"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div
                    class="card radius-10 border-start border-0 border-3 border-danger">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <p class="mb-0 text-secondary">Total Revenue</p>
                                <h4 class="my-1 text-danger"
                                    id="totalRevenue">{{totalRevenue}}</h4>
                                <p class="mb-0 font-13">{{totalRevenueChange}}
                                    from last day</p>
                            </div>
                            <div
                                class="widgets-icons-2 rounded-circle bg-gradient-bloody text-white ms-auto">
                                <i class="fa fa-inr"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div
                    class="card radius-10 border-start border-0 border-3 border-success">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <p class="mb-0 text-secondary">Coupon
                                    Discount</p>
                                <h4 class="my-1 text-success"
                                    id="totalCouponDiscount">{{totalCouponDiscount}}</h4>
                                <p
                                    class="mb-0 font-13">{{totalCouponDiscountChange}}
                                    from last day</p>
                            </div>
                            <div
                                class="widgets-icons-2 rounded-circle bg-gradient-ohhappiness text-white ms-auto">
                                <i class="fa fa-gift"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div
                    class="card radius-10 border-start border-0 border-3 border-warning">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <p class="mb-0 text-secondary">Total
                                    Customers</p>
                                <h4 class="my-1 text-warning"
                                    id="totalCustomers">{{totalCustomers}}</h4>
                                <p class="mb-0 font-13">+8.4% from last week</p>
                            </div>
                            <div
                                class="widgets-icons-2 rounded-circle bg-gradient-blooker text-white ms-auto">
                                <i class="fa fa-users"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        {{!-- Graph details --}}
        <div class="col-md-8">
            <div class="d-flex  align-items-center justify-content-end">
                <!-- Dropdown to select graph type (Daily, Monthly, Yearly) -->
                <select class="graphSales"
                    style="background-color: antiquewhite; border-radius: 4px;">
                    <option selected disabled>Daily</option>
                    <option value="Daily">Daily</option>
                    <option value="Monthly">Monthly</option>
                    <option value="Yearly">Yearly</option>
                </select>
                <!-- Button to apply selected graph type -->
                <button class="btn btn-success ms-2 graphChange">Apply</button>
            </div>
            <!-- Canvas for displaying chart -->
            <canvas class="myChart mt-4" width="400" height="200"></canvas>
        </div>

        {{!-- best Sellers table --}}
        <div class="col-md-4">
            <div class="container">
                <h1>Best Sellers</h1>
                <select id="bestSellersDropdown"
                    style="background-color: antiquewhite; border-radius: 4px; margin-bottom: 10px;">
                    <option value="category">Category</option>
                    <option value="product">Product</option>
                    <option value="variation">Product Variation</option>
                </select>
                <table id="bestSellersTable" class="table table-bordered">
                    <thead class="thead-light">
                        <tr id="tableHeaders">
                            <!-- Headers  -->
                        </tr>
                        <tbody id="bestSellersTableBody">
                            <!-- Table rows  -->
                        </tbody>
                    </thead>
                </table>
            </div>
        </div>
    </body>
    <!-- Chart.js library for chart rendering -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
    // Function to fetch and display data for selected graph type (Daily, Monthly, Yearly)
    const fetchAndDisplayData = (url, chartLabel) => {
        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                let labels, revenue;

                // Adjust data based on selected chartLabel (Daily, Monthly, Yearly)
                if (chartLabel === 'Daily') {
                    labels = data.map(entry => {
                        const date = new Date(entry._id);
                        return `${date.getDate()} ${date.toLocaleString('default', { month: 'short' })}`;
                    });
                    revenue = data.map(entry => entry.totalRevenue);
                } else if (chartLabel === 'Monthly') {
                    labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                    revenue = data.map(entry => ({
                        month: entry._id - 1,
                        totalRevenue: entry.totalRevenue
                    })).reduce((acc, curr) => {
                        acc[curr.month] = curr.totalRevenue;
                        return acc;
                    }, new Array(12).fill(0));
                } else if (chartLabel === 'Yearly') {
                    labels = data.map(entry => entry._id);
                    revenue = data.map(entry => entry.totalRevenue);
                }

                // Get chart canvas context and destroy existing chart instance if any
                const ctx = document.querySelector('.myChart').getContext('2d');
                const chartInstance = Chart.getChart(ctx);
                if (chartInstance) {
                    chartInstance.destroy();
                }

                // Create new Chart.js instance for rendering bar chart
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: `${chartLabel} Revenue`,
                            data: revenue,
                            backgroundColor: 'rgba(16, 232, 163, 1)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            x: {
                                grid: {
                                    color: 'rgba(249, 221, 41, 0.6)'
                                },
                                ticks: {
                                    color: 'green'
                                }
                            },
                            y: {
                                grid: {
                                    color: 'rgba(249, 221, 41, 0.6)'
                                },
                                ticks: {
                                    color: 'red'
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => console.error('Error fetching or processing data:', error));
    };

    // Fetch and display default daily revenue chart on page load
    fetchAndDisplayData('/admin/Daily', 'Daily');

    // Event listener for the graph change button
    document.querySelector('.graphChange').addEventListener('click', () => {
        const select = document.querySelector('.graphSales');
        const selectedValue = select.value;

        if (selectedValue === 'Daily') {
            fetchAndDisplayData('/admin/Daily', 'Daily');
        } else if (selectedValue === 'Monthly') {
            fetchAndDisplayData('/admin/Monthly', 'Monthly');
        } else if (selectedValue === 'Yearly') {
            fetchAndDisplayData('/admin/Yearly', 'Yearly');
        }
    });
});

    // Function to fetch best selling categories
        const fetchBestSellers = (type) => {
            let url = '';
                if (type === 'category') url = '/admin/bestCategory';
                if (type === 'product') url = '/admin/bestProducts';
                if (type === 'variation') url = '/admin/bestVariations';

            $.ajax({
                url: url,
                method: 'GET',
                success: function(data) {
                displayBestSellers(data, type);
                },
                error: function(err) {
                    console.error(`Error fetching best selling ${type}s:`, err);
                }
            });
            };

            // Function to display best sellers based on type (category, product, variation)
            const displayBestSellers = (data, type) => {
                let headersHtml = '';
                let rowsHtml = '';

                if (type === 'category') {
                    headersHtml = `
                        <th>Category Name</th>
                        <th>Total Orders</th>
                    `;
                    data.forEach(item => {
                        rowsHtml += `
                            <tr>
                                <td>${item.categoryName}</td>
                                <td>${item.totalQuantity}</td>
                            </tr>
                        `;
                    });
                } else if (type === 'product') {
                    headersHtml = `
                        <th>Product Name</th>
                        <th>Total Orders</th>
                    `;
                    data.forEach(item => {
                        rowsHtml += `
                            <tr>
                                <td>${item.productName}</td>
                                <td>${item.totalQuantity}</td>
                            </tr>
                        `;
                    });
                } else if (type === 'variation') {
                    headersHtml = `
                        <th>Attribute Name</th>
                        <th>Total Orders</th>
                    `;
                    data.forEach(item => {
                        rowsHtml += `
                            <tr>
                                <td>${item.productName}</td>
                                <td>${item.totalQuantity}</td>
                            </tr>
                        `;
                    });
                }

                $('#tableHeaders').html(headersHtml);
                $('#bestSellersTableBody').html(rowsHtml);
            };

            // Fetch best selling categories on page load
            fetchBestSellers('category');

            // Event listener for the dropdown to select best sellers type
            $('#bestSellersDropdown').change(function() {
                const selectedValue = $(this).val();
                fetchBestSellers(selectedValue);
            });
    </script>
